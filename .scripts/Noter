#!/bin/bash

# dependencias necesarias >>>>  rofi ripgrep libby
EDITOR=nvim
VIEW=/usr/bin/evince
TERMINAL=kitty

# <<------ Directories ------>> #
book_library="/home/Fernando/Books/"
note_library="/home/Fernando/Books/Notes/"
article_library="/home/Fernando/Books/"

# <<------ Main ------>> #
create_document() {
  # Use rofi to prompt the user to select the type of document to create
  document_type=$(echo -e "Basic\nLaTeX\nBeamer\nRmark" | rofi -dmenu -i -p -theme ~/.config/rofi/themes/menu.rasi "What kind of note?")

  # Check if the user cancelled the prompt
  if [ -z "$document_type" ]; then
    return
  fi

  case "$document_type" in
    Basic)
      template="SimpleNote.md"
      EXTENSION="md"
      message="Basic Document Created!"
      ;;
    LaTeX)
      template="LaTeX.tex"
      EXTENSION="tex"
      message="LaTeX Document Created!"
      ;;
    Beamer)
      template="Presentation.tex"
      EXTENSION="tex"
      message="Beamer Presentation Created!"
      ;;
    Rmark)
      template="RMarkdown.rmd"
      EXTENSION="rmd"
      message="R Markdown Document Created!"
      ;;
    *)
      echo "Invalid option"
      return 1
      ;;
  esac

  # Use rofi to prompt the user to enter a name for the note
  cn_name=$(rofi -dmenu -p "Enter a name for the note:")

  # Check if the user cancelled the prompt
  if [ -z "$cn_name" ]; then
    return
  fi

  # Check if the file already exists
  if [ -f "$directory/$cn_name.$EXTENSION" ]; then
    # Prompt the user to confirm if they want to overwrite the file
    if ! (echo -e "Yes\nNo" | rofi -dmenu -p "Note already exists. Overwrite?" | grep -q "Yes"); then
      return
    fi
  fi

  notify-send "$message"
  cp "$directory/Templates/$template" "$directory/$cn_name.$EXTENSION"
  "$TERMINAL" -e "$EDITOR" "$directory/$cn_name.$EXTENSION"
}

open_document() {
  # case insensitive search with ripgrep
  document=$(rg --files --iglob "*.pdf" --iglob "*.epub" --iglob "*.mobi" --iglob "*.md" --iglob ".tex" $directory)
  selected_document=$(echo "$document" | rofi -dmenu -i -p -theme ~/.config/rofi/themes/menu.rasi "üìñ Open:")
  if [[ -n $selected_document ]]; then
    $VIEW "$selected_document"
  fi
}

edit_notes() {
  document=$(rg --files --iglob "*.md" --iglob "*.wiki" --iglob "*.tex" $directory)
  selected_document=$(echo "$document" | rofi -dmenu -i -p -theme ~/.config/rofi/themes/menu.rasi "üìñ Open:")
  if [[ -n $selected_document ]]; then
    $TERMINAL -e $EDITOR "$selected_document"
  fi
}

download_books() {
  bookname=$(echo "" | rofi -dmenu -p "Enter book name:")
  if [ -z "$bookname" ]
  then
      echo "No book name entered"
      exit 1
  fi

  $TERMINAL -T "dropbooks" -e libby --rofi $bookname
}

main() {
  # Prompt the user to select "Library" or "Articles" using Rofi
  selected_dir=$(echo -e "üìë Create Note\nüîñ View Notes\nüìö Library\nüìú Articles\n‚è¨ Download Books" | rofi -dmenu -i -p "üìÇ Choose an action:")
  # Set the directory based on the user's selection
  # if selected_dir is not empty
  if [[ -n $selected_dir ]]; then
      case $selected_dir in
          "üìë Create Note")
              directory=$note_library
              create_document
              ;;
          "üîñ View Notes")
              directory=$note_library
              edit_notes
              ;;
          "üìö Library")
              directory=$book_library
              open_document
              ;;
          "üìú Articles")
              directory=$article_library
              open_document
              ;;
          "‚è¨ Download Books")
              download_books
              ;;
      esac
  else
    exit 0
  fi
}

main
